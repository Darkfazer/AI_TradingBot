def main():
    print("Welcome to the AI Trading Bot!")

    # Step 1: Get user credentials
    api_key = input("Enter your Alpaca API Key: ")
    secret_key = input("Enter your Alpaca Secret Key: ")

    # Step 2: Choose strategy
    strategy = input("Choose a strategy (RSI/SMA): ").strip().upper()
    if strategy not in ["RSI", "SMA"]:
        print("Invalid strategy. Please choose either 'RSI' or 'SMA'.")
        return

    # Step 3: Select asset type
    asset_types = ["Crypto", "Gold", "Stocks", "Forex", "Oil", "Silver", 
                   "Indices", "ETFs", "Treasuries", "Commodities"]
    print("\nChoose an asset type:")
    for i, asset in enumerate(asset_types, start=1):
        print(f"{i}. {asset}")
    
    try:
        choice = int(input("\nEnter the number of your choice (1-10): "))
        if 1 <= choice <= len(asset_types):
            asset_type = asset_types[choice - 1]
            print(f"You selected: {asset_type}")
        else:
            print("Invalid choice. Please select a number between 1 and 10.")
            return
    except ValueError:
        print("Invalid input. Please enter a number.")
        return

    # Step 4: Select symbol based on asset type
    symbols = {
        "Crypto": ["BTC/USD", "ETH/USD", "XRP/USD", "LTC/USD", "ADA/USD"],
        "Gold": ["XAU/USD"],
        "Stocks": ["AAPL", "TSLA", "GOOGL", "AMZN", "MSFT"],
        "Forex": ["EUR/USD", "USD/JPY", "GBP/USD", "AUD/USD", "USD/CHF"],
        "Oil": ["WTI", "Brent"],
        "Silver": ["XAG/USD"],
        "Indices": ["SPX", "NASDAQ", "DOW", "FTSE", "DAX"],
        "ETFs": ["SPY", "QQQ", "ARKK", "VTI", "EEM"],
        "Treasuries": ["10Y", "2Y", "5Y", "30Y", "7Y"],
        "Commodities": ["Copper", "Natural Gas", "Corn", "Wheat", "Soybeans"]
    }

    if asset_type in symbols:
        print(f"\nChoose a trading symbol for {asset_type}:")
        for i, sym in enumerate(symbols[asset_type], start=1):
            print(f"{i}. {sym}")
        try:
            sym_choice = int(input("\nEnter the number of your choice: "))
            if 1 <= sym_choice <= len(symbols[asset_type]):
                symbol = symbols[asset_type][sym_choice - 1]
                print(f"You selected: {symbol}")
            else:
                print("Invalid choice. Please select a valid number.")
                return
        except ValueError:
            print("Invalid input. Please enter a number.")
            return
    else:
        print(f"No predefined symbols available for {asset_type}.")
        return

    # Step 5: Enter quantity
    try:
        quantity = float(input("Enter the quantity to trade: "))
    except ValueError:
        print("Invalid quantity. Please enter a numeric value.")
        return

    # Step 6: Initialize and run the strategy
    if strategy == "RSI":
        rsi_bot = RSI_Strategy(api_key, secret_key)
        print(f"Running RSI strategy for {symbol}...")
        rsi_bot.trade(symbol, quantity)
    elif strategy == "SMA":
        try:
            sma_fast = int(input("Enter the short SMA period: "))
            sma_slow = int(input("Enter the long SMA period: "))
        except ValueError:
            print("Invalid SMA periods. Please enter integer values.")
            return

        sma_bot = SMA_Strategy(api_key, secret_key, sma_fast, sma_slow)
        print(f"Running SMA strategy for {symbol}...")
        sma_bot.start_crypto_SMA(symbol, quantity)

    print("Trading bot is now running. Good luck!")

if __name__ == "__main__":
    main()
